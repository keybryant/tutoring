<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuweilai.dao.OrderInfoMapper">
  <resultMap id="BaseResultMap" type="com.yuweilai.entity.OrderInfo">
    <result column="ORDER_ID" jdbcType="VARCHAR" property="orderId" />
    <result column="PARENT_ID" jdbcType="VARCHAR" property="parentId" />
    <result column="TEACHER_ID" jdbcType="VARCHAR" property="teacherId" />
    <result column="STU_ID" jdbcType="VARCHAR" property="stuId" />
  </resultMap>
  <resultMap id="ResultMap" type="java.util.Map">
    <result column="ORDER_ID" jdbcType="VARCHAR" property="orderId" />
    <result column="PARENT_ID" jdbcType="VARCHAR" property="parentId" />
    <result column="TEACHER_ID" jdbcType="VARCHAR" property="teacherId" />
    <result column="STU_ID" jdbcType="VARCHAR" property="stuId" />
    <result column="ORDER_STATE" jdbcType="INTEGER" property="orderState"/>
    <result column="ORDER_TIME" jdbcType="TIMESTAMP" property="orderTime"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ORDER_ID, PARENT_ID, TEACHER_ID, STU_ID
  </sql>
  <select id="selectByExample" parameterType="com.yuweilai.entity.OrderInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByUserId" parameterType="com.yuweilai.entity.OrderInfoExample" resultMap="ResultMap">
    SELECT a.ORDER_ID,a.TEACHER_ID,a.PARENT_ID,a.STU_ID ,b.ORDER_STATE,b.ORDER_TIME FROM order_info a left JOIN  order_base b ON a.ORDER_ID=b.ORDER_ID
    <if test="_parameter != null">
    <include refid="Example_Where_Clause" />
    </if>
   ORDER BY b.ORDER_TIME DESC
  </select>
  <delete id="deleteByExample" parameterType="com.yuweilai.entity.OrderInfoExample">
    delete from order_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yuweilai.entity.OrderInfo">
    insert into order_info (ORDER_ID, PARENT_ID, TEACHER_ID, 
      STU_ID)
    values (#{orderId,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, #{teacherId,jdbcType=VARCHAR}, 
      #{stuId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yuweilai.entity.OrderInfo">
    insert into order_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        ORDER_ID,
      </if>
      <if test="parentId != null">
        PARENT_ID,
      </if>
      <if test="teacherId != null">
        TEACHER_ID,
      </if>
      <if test="stuId != null">
        STU_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="stuId != null">
        #{stuId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yuweilai.entity.OrderInfoExample" resultType="java.lang.Long">
    select count(*) from order_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_info
    <set>
      <if test="record.orderId != null">
        ORDER_ID = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        PARENT_ID = #{record.parentId,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherId != null">
        TEACHER_ID = #{record.teacherId,jdbcType=VARCHAR},
      </if>
      <if test="record.stuId != null">
        STU_ID = #{record.stuId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_info
    set ORDER_ID = #{record.orderId,jdbcType=VARCHAR},
      PARENT_ID = #{record.parentId,jdbcType=VARCHAR},
      TEACHER_ID = #{record.teacherId,jdbcType=VARCHAR},
      STU_ID = #{record.stuId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>