<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuweilai.dao.TeacherInfoMapper">
  <resultMap id="BaseResultMap" type="com.yuweilai.entity.TeacherInfo">
    <id column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="GRADE" jdbcType="VARCHAR" property="grade" />
    <result column="COURSE" jdbcType="VARCHAR" property="course" />
    <result column="TEACH_TIME" jdbcType="VARCHAR" property="teachTime" />
    <result column="SCORE" jdbcType="INTEGER" property="score" />
    <result column="MOBILE_NUM" jdbcType="VARCHAR" property="mobileNum" />
    <result column="AUTH_STATE" jdbcType="INTEGER" property="authState" />
    <result column="GENDER" jdbcType="INTEGER" property="gender" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="PROFILE" jdbcType="VARCHAR" property="profile" />
    <result column="AUTH_PIC" jdbcType="VARCHAR" property="authPic" />
    <result column="SUBJECT" jdbcType="VARCHAR" property="subject" />
    <result column="MOTTO" jdbcType="VARCHAR" property="motto" />
    <result column="INTRO" jdbcType="VARCHAR" property="intro" />
    <result column="SCHOOL" jdbcType="VARCHAR" property="school" />
    <result column="STATE" jdbcType="INTEGER" property="state" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USER_ID, GRADE, COURSE, TEACH_TIME, SCORE, MOBILE_NUM, AUTH_STATE, GENDER, USER_NAME, 
    PROFILE, AUTH_PIC, SUBJECT, MOTTO, INTRO, SCHOOL, STATE
  </sql>
  <select id="selectByExample" parameterType="com.yuweilai.entity.TeacherInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from teacher_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from teacher_info
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from teacher_info
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.yuweilai.entity.TeacherInfoExample">
    delete from teacher_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yuweilai.entity.TeacherInfo">
    insert into teacher_info (USER_ID, GRADE, COURSE, 
      TEACH_TIME, SCORE, MOBILE_NUM, 
      AUTH_STATE, GENDER, USER_NAME, 
      PROFILE, AUTH_PIC, SUBJECT, 
      MOTTO, INTRO, SCHOOL, 
      STATE)
    values (#{userId,jdbcType=VARCHAR}, #{grade,jdbcType=VARCHAR}, #{course,jdbcType=VARCHAR}, 
      #{teachTime,jdbcType=VARCHAR}, #{score,jdbcType=INTEGER}, #{mobileNum,jdbcType=VARCHAR}, 
      #{authState,jdbcType=INTEGER}, #{gender,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, 
      #{profile,jdbcType=VARCHAR}, #{authPic,jdbcType=VARCHAR}, #{subject,jdbcType=VARCHAR}, 
      #{motto,jdbcType=VARCHAR}, #{intro,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yuweilai.entity.TeacherInfo">
    insert into teacher_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="grade != null">
        GRADE,
      </if>
      <if test="course != null">
        COURSE,
      </if>
      <if test="teachTime != null">
        TEACH_TIME,
      </if>
      <if test="score != null">
        SCORE,
      </if>
      <if test="mobileNum != null">
        MOBILE_NUM,
      </if>
      <if test="authState != null">
        AUTH_STATE,
      </if>
      <if test="gender != null">
        GENDER,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="profile != null">
        PROFILE,
      </if>
      <if test="authPic != null">
        AUTH_PIC,
      </if>
      <if test="subject != null">
        SUBJECT,
      </if>
      <if test="motto != null">
        MOTTO,
      </if>
      <if test="intro != null">
        INTRO,
      </if>
      <if test="school != null">
        SCHOOL,
      </if>
      <if test="state != null">
        STATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="course != null">
        #{course,jdbcType=VARCHAR},
      </if>
      <if test="teachTime != null">
        #{teachTime,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="mobileNum != null">
        #{mobileNum,jdbcType=VARCHAR},
      </if>
      <if test="authState != null">
        #{authState,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="profile != null">
        #{profile,jdbcType=VARCHAR},
      </if>
      <if test="authPic != null">
        #{authPic,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="motto != null">
        #{motto,jdbcType=VARCHAR},
      </if>
      <if test="intro != null">
        #{intro,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yuweilai.entity.TeacherInfoExample" resultType="java.lang.Long">
    select count(*) from teacher_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update teacher_info
    <set>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null">
        GRADE = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.course != null">
        COURSE = #{record.course,jdbcType=VARCHAR},
      </if>
      <if test="record.teachTime != null">
        TEACH_TIME = #{record.teachTime,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null">
        SCORE = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.mobileNum != null">
        MOBILE_NUM = #{record.mobileNum,jdbcType=VARCHAR},
      </if>
      <if test="record.authState != null">
        AUTH_STATE = #{record.authState,jdbcType=INTEGER},
      </if>
      <if test="record.gender != null">
        GENDER = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.profile != null">
        PROFILE = #{record.profile,jdbcType=VARCHAR},
      </if>
      <if test="record.authPic != null">
        AUTH_PIC = #{record.authPic,jdbcType=VARCHAR},
      </if>
      <if test="record.subject != null">
        SUBJECT = #{record.subject,jdbcType=VARCHAR},
      </if>
      <if test="record.motto != null">
        MOTTO = #{record.motto,jdbcType=VARCHAR},
      </if>
      <if test="record.intro != null">
        INTRO = #{record.intro,jdbcType=VARCHAR},
      </if>
      <if test="record.school != null">
        SCHOOL = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        STATE = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update teacher_info
    set USER_ID = #{record.userId,jdbcType=VARCHAR},
      GRADE = #{record.grade,jdbcType=VARCHAR},
      COURSE = #{record.course,jdbcType=VARCHAR},
      TEACH_TIME = #{record.teachTime,jdbcType=VARCHAR},
      SCORE = #{record.score,jdbcType=INTEGER},
      MOBILE_NUM = #{record.mobileNum,jdbcType=VARCHAR},
      AUTH_STATE = #{record.authState,jdbcType=INTEGER},
      GENDER = #{record.gender,jdbcType=INTEGER},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      PROFILE = #{record.profile,jdbcType=VARCHAR},
      AUTH_PIC = #{record.authPic,jdbcType=VARCHAR},
      SUBJECT = #{record.subject,jdbcType=VARCHAR},
      MOTTO = #{record.motto,jdbcType=VARCHAR},
      INTRO = #{record.intro,jdbcType=VARCHAR},
      SCHOOL = #{record.school,jdbcType=VARCHAR},
      STATE = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yuweilai.entity.TeacherInfo">
    update teacher_info
    <set>
      <if test="grade != null">
        GRADE = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="course != null">
        COURSE = #{course,jdbcType=VARCHAR},
      </if>
      <if test="teachTime != null">
        TEACH_TIME = #{teachTime,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        SCORE = #{score,jdbcType=INTEGER},
      </if>
      <if test="mobileNum != null">
        MOBILE_NUM = #{mobileNum,jdbcType=VARCHAR},
      </if>
      <if test="authState != null">
        AUTH_STATE = #{authState,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        GENDER = #{gender,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="profile != null">
        PROFILE = #{profile,jdbcType=VARCHAR},
      </if>
      <if test="authPic != null">
        AUTH_PIC = #{authPic,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        SUBJECT = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="motto != null">
        MOTTO = #{motto,jdbcType=VARCHAR},
      </if>
      <if test="intro != null">
        INTRO = #{intro,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        SCHOOL = #{school,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        STATE = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yuweilai.entity.TeacherInfo">
    update teacher_info
    set GRADE = #{grade,jdbcType=VARCHAR},
      COURSE = #{course,jdbcType=VARCHAR},
      TEACH_TIME = #{teachTime,jdbcType=VARCHAR},
      SCORE = #{score,jdbcType=INTEGER},
      MOBILE_NUM = #{mobileNum,jdbcType=VARCHAR},
      AUTH_STATE = #{authState,jdbcType=INTEGER},
      GENDER = #{gender,jdbcType=INTEGER},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      PROFILE = #{profile,jdbcType=VARCHAR},
      AUTH_PIC = #{authPic,jdbcType=VARCHAR},
      SUBJECT = #{subject,jdbcType=VARCHAR},
      MOTTO = #{motto,jdbcType=VARCHAR},
      INTRO = #{intro,jdbcType=VARCHAR},
      SCHOOL = #{school,jdbcType=VARCHAR},
      STATE = #{state,jdbcType=INTEGER}
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </update>
</mapper>