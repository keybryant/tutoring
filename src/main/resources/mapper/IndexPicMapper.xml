<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuweilai.dao.IndexPicMapper">
  <resultMap id="BaseResultMap" type="com.yuweilai.entity.IndexPic">
    <result column="PIC_URL" jdbcType="VARCHAR" property="picUrl" />
    <result column="URL" jdbcType="VARCHAR" property="url" />
    <result column="RANKING" jdbcType="INTEGER" property="ranking" />
    <result column="STATE" jdbcType="INTEGER" property="state" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    PIC_URL, URL, RANKING, STATE
  </sql>
  <select id="selectByExample" parameterType="com.yuweilai.entity.IndexPicExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from index_pic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yuweilai.entity.IndexPicExample">
    delete from index_pic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yuweilai.entity.IndexPic">
    insert into index_pic (PIC_URL, URL, RANKING, 
      STATE)
    values (#{picUrl,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{ranking,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yuweilai.entity.IndexPic">
    insert into index_pic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="picUrl != null">
        PIC_URL,
      </if>
      <if test="url != null">
        URL,
      </if>
      <if test="ranking != null">
        RANKING,
      </if>
      <if test="state != null">
        STATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="picUrl != null">
        #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="ranking != null">
        #{ranking,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yuweilai.entity.IndexPicExample" resultType="java.lang.Long">
    select count(*) from index_pic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update index_pic
    <set>
      <if test="record.picUrl != null">
        PIC_URL = #{record.picUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        URL = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.ranking != null">
        RANKING = #{record.ranking,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        STATE = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update index_pic
    set PIC_URL = #{record.picUrl,jdbcType=VARCHAR},
      URL = #{record.url,jdbcType=VARCHAR},
      RANKING = #{record.ranking,jdbcType=INTEGER},
      STATE = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>